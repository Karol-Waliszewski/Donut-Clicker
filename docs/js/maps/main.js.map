{"version":3,"sources":["main.js"],"names":["e","t","n","r","s","o","u","a","require","i","Error","f","exports","call","length","1","module","DonutModule","$donut","document","querySelector","$clicks","$money","money","clicks","moneyOnClick","moneyEveryTime","database","countClick","saveProgress","clickMoney","moneyPerTime","timeMoney","openDatabase","callback","indexedDB","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","open","console","error","innerHTML","setTimeout","onerror","event","target","errorCode","DBOpenRequest","onupgradeneeded","result","objectStoreNames","contains","objectStore","createObjectStore","createIndex","closeDatabase","keyPath","key","value","alert","unique","transaction","loadProgress","store","request","openCursor","cursor","eval","continue","onsuccess","this","level","btn","options","btnElement","oM","obtainedMoney","uM","upgradeMultiplier","dE","donutElement","hasOwnProperty","sE","statElement","Upgrade","boost","rM","previousElementSibling","checkUpgradeAvailable","parseInt","color","getRandomColor","forEach","item","style","prototype","parentElement","classList","remove","add","clickUpgrade","requiredMoney","moneyMultiplier","moneyEveryTimeUpgrade","querySelectorAll","addEventListener","preventDefault","setStats","clearTimeout","moneyPerTimeUpgrade","setInterval","bind","setIntervals","2","navigator","log","registration","scope","err","3"],"mappings":"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","file":"../main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nconst DonutModule = (function() {\n\n  // DOM\n  var $donut = document.querySelector('#donut'),\n    $clicks = document.querySelector('#clicks'),\n    $money = document.querySelector('#money');\n\n  // Variables\n  var money = 0,\n    clicks = 0,\n    moneyOnClick = 1,\n    moneyPerTime = 1,\n    moneyEveryTime = 300 * 1000,\n    database;\n\n  // Methods\n  var countClick = function() {\n    clicks++;\n    $clicks.innerHTML = clicks;\n    saveProgress('clicks', clicks);\n  };\n\n  var clickMoney = function() {\n    money += moneyOnClick;\n    $money.innerHTML = money;\n    saveProgress('money', money);\n  };\n\n  var timeMoney = function() {\n    money += moneyPerTime;\n    $money.innerHTML = money;\n    setTimeout(timeMoney, moneyEveryTime);\n  };\n\n  var openDatabase = function(callback) {\n    var indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n\n    var DBOpenRequest = indexedDB.open(\"DonutClicker\", 1);\n\n    DBOpenRequest.onerror = function(e) {\n      console.error('[IndexedDB] Opening error.');\n    };\n\n    DBOpenRequest.onsuccess = function(e) {\n      console.log('[IndexedDB] Database initialised.');\n      database = e.target.result;\n      database.onerror = function(event) {\n        console.error(\"[IndexedDB] error: \" + event.target.errorCode);\n      };\n      callback();\n    };\n\n    DBOpenRequest.onupgradeneeded = function(e) {\n      console.log('[IndexedDB] Database upgrade.');\n      database = e.target.result;\n      if (!database.objectStoreNames.contains(\"ClickerStore\")) {\n        var objectStore = database.createObjectStore(\"ClickerStore\", {\n          keyPath: \"key\"\n        });\n        objectStore.createIndex(\"key\", \"key\", {\n          unique: true\n        });\n        objectStore.createIndex(\"value\", \"value\", {\n          unique: false\n        });\n        callback();\n      };\n    };\n  };\n\n  var closeDatabase = function() {\n    database.close();\n    database = null;\n  };\n\n  var saveProgress = function(key, value) {\n    if (database) {\n      var tx = database.transaction([\"ClickerStore\"], \"readwrite\");\n      var store = tx.objectStore(\"ClickerStore\");\n      var request = store.put({\n        key,\n        value\n      });\n      request.onerror = function(e) {\n        console.error('[IndexedDB] Error: ' + e);\n      };\n    } else {\n      alert('Open database at first');\n      return false;\n    }\n  };\n\n  var loadProgress = function() {\n    if (database) {\n      var tx = database.transaction([\"ClickerStore\"], \"readwrite\");\n      var store = tx.objectStore(\"ClickerStore\");\n      var request = store.openCursor();\n      request.onsuccess = function(e) {\n        var cursor = e.target.result;\n        if (cursor) {\n          eval(`${cursor.value.key} = ${cursor.value.value}`);\n          cursor.continue();\n        }\n      };\n    } else {\n      alert('Open database at first');\n      return false;\n    }\n  };\n\n  // Object\n  var Upgrade = function(options) {\n    this.level = 1;\n    this.btn = options.btnElement;\n    this.rM = options.requiredMoney;\n    this.mM = options.moneyMultiplier;\n    this.oM = options.obtainedMoney;\n    this.uM = options.upgradeMultiplier;\n    this.dE = options.donutElement;\n    if (options.hasOwnProperty('statElement')) {\n      this.sE = options.statElement;\n    }\n  };\n\n  // Object Methods\n  Upgrade.prototype.boost = function() {\n    if (money < this.rM) {\n      return false;\n    } else {\n      this.level++;\n      this.btn.previousElementSibling.children[1].innerHTML = this.level;\n      money -= this.rM;\n      $money.innerHTML = parseInt(money);\n      this.checkUpgradeAvailable();\n      this.rM = this.rM * this.mM;\n      this.oM = parseInt(this.oM * this.uM);\n\n      if (this.hasOwnProperty('sE')) {\n        this.sE.innerHTML = this.oM;\n      }\n\n      let color = getRandomColor();\n      this.dE.forEach(function(item) {\n        item.style.fill = color;\n      });\n\n      return parseInt(this.oM);\n    }\n  };\n\n  Upgrade.prototype.checkUpgradeAvailable = function() {\n    if (this.rM <= money) {\n      this.btn.parentElement.classList.remove('disabled');\n    } else {\n      this.btn.parentElement.classList.add('disabled');\n    }\n  };\n\n  // Creating Objects\n  var clickUpgrade = new Upgrade({\n    requiredMoney: 40,\n    obtainedMoney: 1,\n    moneyMultiplier: 3,\n    upgradeMultiplier: 2,\n    btnElement: document.querySelector('#clickUpgrade'),\n    donutElement: document.querySelectorAll('.donut__topping')\n  });\n\n  var moneyEveryTimeUpgrade = new Upgrade({\n    requiredMoney: 200,\n    obtainedMoney: 300,\n    moneyMultiplier: 2.5,\n    upgradeMultiplier: 0.97,\n    btnElement: document.querySelector('#timeUpgrade'),\n    statElement: document.querySelector('#moneyEveryTime'),\n    donutElement: document.querySelectorAll('.donut__frostig')\n  });\n\n  var moneyPerTimeUpgrade = new Upgrade({\n    requiredMoney: 100,\n    obtainedMoney: 1,\n    moneyMultiplier: 3.5,\n    upgradeMultiplier: 2.5,\n    btnElement: document.querySelector('#moneyTimeUpgrade'),\n    statElement: document.querySelector('#moneyPerTime'),\n    donutElement: document.querySelectorAll('.donut__cake')\n  });\n\n  // Event Handlers\n  var handleEvents = function() {\n    $donut.addEventListener('click', function() {\n      countClick();\n      clickMoney();\n    });\n\n    $donut.addEventListener('mousedown', function(e) {\n      e.preventDefault();\n    }, false);\n\n    clickUpgrade.btn.addEventListener('click', function() {\n      moneyOnClick = clickUpgrade.boost() || moneyOnClick;\n    });\n\n    moneyEveryTimeUpgrade.btn.addEventListener('click', function() {\n      moneyEveryTime = moneyEveryTimeUpgrade.boost() * 1000 || moneyEveryTime;\n      window.clearTimeout(timeMoney);\n      setTimeout(timeMoney, moneyEveryTime);\n    });\n\n    moneyPerTimeUpgrade.btn.addEventListener('click', function() {\n      moneyPerTime = moneyPerTimeUpgrade.boost() || moneyPerTime;\n    });\n  };\n\n  // Sets stats\n  var setStats = function() {\n    document.querySelector('#moneyEveryTime').innerHTML = moneyEveryTime / 1000;\n    document.querySelector('#moneyPerTime').innerHTML = moneyPerTime;\n    $clicks.innerHTML = clicks;\n    $money.innerHTML = money;\n  };\n\n  // Sets intervals up\n  var setIntervals = function() {\n    setTimeout(timeMoney, moneyEveryTime);\n    setInterval(clickUpgrade.checkUpgradeAvailable.bind(clickUpgrade), 200);\n    setInterval(moneyEveryTimeUpgrade.checkUpgradeAvailable.bind(moneyEveryTimeUpgrade), 200);\n    setInterval(moneyPerTimeUpgrade.checkUpgradeAvailable.bind(moneyPerTimeUpgrade), 200);\n  };\n\n  // Init\n  var init = function() {\n\n    handleEvents();\n    openDatabase(function() {\n      loadProgress();\n      setStats();\n      setIntervals();\n    });\n\n  }();\n\n})();\n\n},{}],2:[function(require,module,exports){\nrequire( './donut.js');\r\nrequire('./randomColor.js');\r\n\r\nif ('serviceWorker' in navigator) {\r\n  window.addEventListener('load', function() {\r\n    navigator.serviceWorker.register('Service-Worker.js').then(function(registration) {\r\n      // Registration was successful\r\n      console.log('ServiceWorker registration successful with scope:', registration.scope);\r\n    }, function(err) {\r\n      // registration failed :(\r\n      console.log('ServiceWorker registration failed: ', err);\r\n    });\r\n  });\r\n}\r\n\n},{\"./donut.js\":1,\"./randomColor.js\":3}],3:[function(require,module,exports){\nfunction getRandomColor() {\n  let letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\n},{}]},{},[2])"]}