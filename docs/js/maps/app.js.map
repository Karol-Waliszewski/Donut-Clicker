{"version":3,"sources":["randomColor.js","donut.js"],"names":["getRandomColor","color","i","Math","floor","random","DonutModule","$donut","document","querySelector","$clicks","$money","moneyOnClick","moneyPerTime","moneyEveryTime","countClick","value","parseInt","innerHTML","clickMoney","timeMoney","setTimeout","Upgrade","options","this","level","btn","btnElement","rM","requiredMoney","mM","moneyMultiplier","oM","obtainedMoney","uM","upgradeMultiplier","dE","donutElement","hasOwnProperty","sE","statElement","prototype","boost","previousElementSibling","children","checkUpgradeAvailable","console","log","forEach","item","style","fill","parentElement","classList","remove","add","clickUpgrade","querySelectorAll","moneyEveryTimeUpgrade","moneyPerTimeUpgrade","addEventListener","e","preventDefault","window","clearTimeout","setInterval","bind"],"mappings":"YAAA,SAAAA,kBAGA,IAAA,GADAC,GAAA,IACAC,EAAA,EAAAA,EAAA,EAAAA,IACAD,GAHA,mBAGAE,KAAAC,MAAA,GAAAD,KAAAE,UAEA,OAAAJ,GCNA,GAAAK,aAAA,WAGA,GAAAC,GAAAC,SAAAC,cAAA,UACAC,EAAAF,SAAAC,cAAA,WACAE,EAAAH,SAAAC,cAAA,UAIAG,EAAA,EACAC,EAAA,EACAC,EAAA,KAGAC,EAAA,WACA,GAAAC,GAAAC,SAAAP,EAAAQ,UACAF,KACAN,EAAAQ,UAAAF,GAGAG,EAAA,WACA,GAAAH,GAAAC,SAAAN,EAAAO,UACAF,IAAAJ,EACAD,EAAAO,UAAAF,GAGAI,EAAA,QAAAA,KACA,GAAAJ,GAAAC,SAAAN,EAAAO,UACAF,IAAAH,EACAF,EAAAO,UAAAF,EACAK,WAAAD,EAAAN,IAIAQ,EAAA,SAAAC,GACAC,KAAAC,MAAA,EACAD,KAAAE,IAAAH,EAAAI,WACAH,KAAAI,GAAAL,EAAAM,cACAL,KAAAM,GAAAP,EAAAQ,gBACAP,KAAAQ,GAAAT,EAAAU,cACAT,KAAAU,GAAAX,EAAAY,kBACAX,KAAAY,GAAAb,EAAAc,aACAd,EAAAe,eAAA,iBACAd,KAAAe,GAAAhB,EAAAiB,aAKAlB,GAAAmB,UAAAC,MAAA,WACA,GAAA1B,GAAAC,SAAAN,EAAAO,UACA,IAAAF,EAAAQ,KAAAI,GACA,OAAA,CAeA,IAbAJ,KAAAC,QACAD,KAAAE,IAAAiB,uBAAAC,SAAA,GAAA1B,UAAAM,KAAAC,MACAT,GAAAQ,KAAAI,GACAjB,EAAAO,UAAAD,SAAAD,GACAQ,KAAAqB,wBACArB,KAAAI,GAAAJ,KAAAI,GAAAJ,KAAAM,GACAN,KAAAQ,GAAAf,SAAAO,KAAAQ,GAAAR,KAAAU,IAEAV,KAAAc,eAAA,QACAQ,QAAAC,IAAAvB,KAAAQ,IACAR,KAAAe,GAAArB,UAAAM,KAAAQ,IAGAR,KAAAC,MAAA,GAAA,EAAA,CACA,GAAAxB,GAAAD,gBACAwB,MAAAY,GAAAY,QAAA,SAAAC,GACAA,EAAAC,MAAAC,KAAAlD,IAIA,MAAAgB,UAAAO,KAAAQ,KAIAV,EAAAmB,UAAAI,sBAAA,WACA,GAAA7B,GAAAC,SAAAN,EAAAO,UAEAM,MAAAI,IAAAZ,EACAQ,KAAAE,IAAA0B,cAAAC,UAAAC,OAAA,YAEA9B,KAAAE,IAAA0B,cAAAC,UAAAE,IAAA,YAKA,IAAAC,GAAA,GAAAlC,IACAO,cAAA,GACAI,cAAA,EACAF,gBAAA,IACAI,kBAAA,EACAR,WAAAnB,SAAAC,cAAA,iBACA4B,aAAA7B,SAAAiD,iBAAA,qBAIAC,EAAA,GAAApC,IACAO,cAAA,IACAI,cAAA,IACAF,gBAAA,EACAI,kBAAA,GACAR,WAAAnB,SAAAC,cAAA,gBACA+B,YAAAhC,SAAAC,cAAA,mBACA4B,aAAA7B,SAAAiD,iBAAA,qBAGAE,EAAA,GAAArC,IACAO,cAAA,IACAI,cAAA,EACAF,gBAAA,EACAI,kBAAA,EACAR,WAAAnB,SAAAC,cAAA,qBACA+B,YAAAhC,SAAAC,cAAA,iBACA4B,aAAA7B,SAAAiD,iBAAA,iBAKAlD,GAAAqD,iBAAA,QAAA,WACA7C,IACAI,MAGAZ,EAAAqD,iBAAA,YAAA,SAAAC,GACAA,EAAAC,mBACA,GAGAN,EAAA9B,IAAAkC,iBAAA,QAAA,WACAhD,EAAA4C,EAAAd,SAAA9B,IAGA8C,EAAAhC,IAAAkC,iBAAA,QAAA,WACA9C,EAAA,IAAA4C,EAAAhB,SAAA5B,EACAiD,OAAAC,aAAA5C,GACAC,WAAAD,EAAAN,KAGA6C,EAAAjC,IAAAkC,iBAAA,QAAA,WACA/C,EAAA8C,EAAAjB,SAAA7B,IAIAQ,WAAAD,EAAAN,GACAmD,YAAAT,EAAAX,sBAAAqB,KAAAV,GAAA,KACAS,YAAAP,EAAAb,sBAAAqB,KAAAR,GAAA,KACAO,YAAAN,EAAAd,sBAAAqB,KAAAP,GAAA","file":"../app.js","sourcesContent":["   function getRandomColor() {\r\n       let letters = '0123456789ABCDEF';\r\n       let color = '#';\r\n       for (let i = 0; i < 6; i++) {\r\n           color += letters[Math.floor(Math.random() * 16)];\r\n       }\r\n       return color;\r\n   }\r\n","const DonutModule = (function () {\r\n\r\n    // DOM \r\n    var $donut = document.querySelector('#donut'),\r\n        $clicks = document.querySelector('#clicks'),\r\n        $money = document.querySelector('#money');\r\n\r\n\r\n    // Variables \r\n    var moneyOnClick = 1,\r\n        moneyPerTime = 1,\r\n        moneyEveryTime = 120 * 1000;\r\n\r\n    // Methods \r\n    var countClick = function () {\r\n        let value = parseInt($clicks.innerHTML);\r\n        value++;\r\n        $clicks.innerHTML = value;\r\n    }\r\n\r\n    var clickMoney = function () {\r\n        let value = parseInt($money.innerHTML);\r\n        value += moneyOnClick;\r\n        $money.innerHTML = value;\r\n    }\r\n\r\n    var timeMoney = function () {\r\n        let value = parseInt($money.innerHTML);\r\n        value += moneyPerTime;\r\n        $money.innerHTML = value;\r\n        setTimeout(timeMoney, moneyEveryTime);\r\n    }\r\n\r\n    // Object\r\n    var Upgrade = function (options) {\r\n        this.level = 1;\r\n        this.btn = options.btnElement;\r\n        this.rM = options.requiredMoney;\r\n        this.mM = options.moneyMultiplier;\r\n        this.oM = options.obtainedMoney;\r\n        this.uM = options.upgradeMultiplier;\r\n        this.dE = options.donutElement;\r\n        if (options.hasOwnProperty('statElement')) {\r\n            this.sE = options.statElement;\r\n        }\r\n    }\r\n\r\n    // Object Methods \r\n    Upgrade.prototype.boost = function () {\r\n        let value = parseInt($money.innerHTML);\r\n        if (value < this.rM) {\r\n            return false;\r\n        } else {\r\n            this.level++;\r\n            this.btn.previousElementSibling.children[1].innerHTML = this.level;\r\n            value -= this.rM;\r\n            $money.innerHTML = parseInt(value);\r\n            this.checkUpgradeAvailable();\r\n            this.rM = this.rM * this.mM;\r\n            this.oM = parseInt(this.oM * this.uM);\r\n\r\n            if (this.hasOwnProperty('sE')) {\r\n                console.log(this.oM)\r\n                this.sE.innerHTML = this.oM;\r\n            }\r\n\r\n            if (this.level % 2 == 0) {\r\n                let color = getRandomColor();\r\n                this.dE.forEach(function (item) {\r\n                    item.style.fill = color;\r\n                })\r\n            }\r\n\r\n            return parseInt(this.oM);\r\n        }\r\n    }\r\n\r\n    Upgrade.prototype.checkUpgradeAvailable = function () {\r\n        let value = parseInt($money.innerHTML);\r\n\r\n        if (this.rM <= value) {\r\n            this.btn.parentElement.classList.remove('disabled');\r\n        } else {\r\n            this.btn.parentElement.classList.add('disabled');\r\n        }\r\n    }\r\n\r\n    // Creating Objects\r\n    var clickUpgrade = new Upgrade({\r\n        requiredMoney: 40,\r\n        obtainedMoney: 1,\r\n        moneyMultiplier: 2.5,\r\n        upgradeMultiplier: 2,\r\n        btnElement: document.querySelector('#clickUpgrade'),\r\n        donutElement: document.querySelectorAll('.donut__topping')\r\n\r\n    });\r\n\r\n    var moneyEveryTimeUpgrade = new Upgrade({\r\n        requiredMoney: 250,\r\n        obtainedMoney: 120,\r\n        moneyMultiplier: 3,\r\n        upgradeMultiplier: 0.5,\r\n        btnElement: document.querySelector('#timeUpgrade'),\r\n        statElement: document.querySelector('#moneyEveryTime'),\r\n        donutElement: document.querySelectorAll('.donut__frostig')\r\n    });\r\n\r\n    var moneyPerTimeUpgrade = new Upgrade({\r\n        requiredMoney: 100,\r\n        obtainedMoney: 1,\r\n        moneyMultiplier: 3,\r\n        upgradeMultiplier: 4,\r\n        btnElement: document.querySelector('#moneyTimeUpgrade'),\r\n        statElement: document.querySelector('#moneyPerTime'),\r\n        donutElement: document.querySelectorAll('.donut__cake')\r\n    });\r\n\r\n\r\n    // Event Handlers\r\n    $donut.addEventListener('click', function () {\r\n        countClick();\r\n        clickMoney();\r\n    })\r\n\r\n    $donut.addEventListener('mousedown', function (e) {\r\n        e.preventDefault();\r\n    }, false);\r\n\r\n\r\n    clickUpgrade.btn.addEventListener('click', function () {\r\n        moneyOnClick = clickUpgrade.boost() || moneyOnClick;\r\n    });\r\n\r\n    moneyEveryTimeUpgrade.btn.addEventListener('click', function () {\r\n        moneyEveryTime = moneyEveryTimeUpgrade.boost() * 1000 || moneyEveryTime;\r\n        window.clearTimeout(timeMoney);\r\n        setTimeout(timeMoney, moneyEveryTime);\r\n    });\r\n\r\n    moneyPerTimeUpgrade.btn.addEventListener('click', function () {\r\n        moneyPerTime = moneyPerTimeUpgrade.boost() || moneyPerTime;\r\n    });\r\n\r\n    // Init\r\n    setTimeout(timeMoney, moneyEveryTime);\r\n    setInterval(clickUpgrade.checkUpgradeAvailable.bind(clickUpgrade), 200);\r\n    setInterval(moneyEveryTimeUpgrade.checkUpgradeAvailable.bind(moneyEveryTimeUpgrade), 200);\r\n    setInterval(moneyPerTimeUpgrade.checkUpgradeAvailable.bind(moneyPerTimeUpgrade), 200);\r\n})();\r\n"]}