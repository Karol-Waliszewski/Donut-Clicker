{"version":3,"sources":["clicker.js"],"names":["e","t","n","r","s","o","u","a","require","i","Error","f","exports","call","length","1","module","database","open","callback","indexedDB","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","DBOpenRequest","onupgradeneeded","console","contains","createObjectStore","createIndex","unique","log","target","errorCode","keyPath","error","onsuccess","value","onerror","put","key","load","store","objectStore","transaction","request","getAll","result","this","money","options","clicks","Donut","3","Upgrade","Database","navigator","then","registration","scope","err","clickerModule","$donut","document","querySelector","$money","moneyOnClick","moneyPerTime","moneyEveryTime","countClick","$clicks","innerHTML","save","clickMoney","updateMoney","timeMoney","setTimeout","obtainedMoney","moneyMultiplier","upgradeMultiplier","moneyEveryTimeUpgrade","requiredMoney","clickUpgrade","btnElement","moneyPerTimeUpgrade","statElement","handleEvents","donutElement","btn","addEventListener","boost","results","newUpgrade","preventDefault","level","color","eC","clearTimeout","newMoney","stat","constructor","Object","setStats","eval","setIntervals","setInterval","checkUpgradeAvailable","init","./database","./donut","./upgrade","4","getRandomColor","floor","Math","random","rM","mM","oM","uM","dE","prototype","letters","children","parseInt","sE","forEach","item","style","fill","_this","classList","remove","parentElement","add","_ref","./randomColor"],"mappings":"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","file":"../clicker.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar database;\n\nexports.open = function(callback) {\n  var indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n\n  var DBOpenRequest = indexedDB.open(\"DonutClicker\", 1);\n\n  DBOpenRequest.onupgradeneeded = function(e) {\n    console.log('[IndexedDB] Database upgrade.');\n    database = e.target.result;\n    if (!database.objectStoreNames.contains(\"clickerStore\")) {\n      var objectStore = database.createObjectStore(\"clickerStore\", {\n        keyPath: \"key\"\n      });\n      objectStore.createIndex(\"key\", \"key\", {\n        unique: true\n      });\n    }\n\n  };\n\n  DBOpenRequest.onsuccess = function(e) {\n    console.log('[IndexedDB] Database initialised.');\n    database = e.target.result;\n    database.onerror = function(e) {\n      console.error(\"[IndexedDB] error: \" + e.target.errorCode);\n    };\n    if (callback)\n      callback();\n  };\n\n  DBOpenRequest.onerror = function(e) {\n    console.error('[IndexedDB] Opening error.');\n  };\n};\n\nexports.save = function(key, value) {\n  if (database) {\n    var tx = database.transaction([\"clickerStore\"], \"readwrite\");\n    var store = tx.objectStore('clickerStore');\n    var request = store.put({\n      key,\n      value\n    });\n    request.onerror = function(e) {\n      console.error('[IndexedDB] Error: ' + e);\n    };\n  } else {\n    console.error('Open database at first');\n    return false;\n  }\n};\n\nexports.load = function(callback) {\n  if (database) {\n    var tx = database.transaction([\"clickerStore\"], \"readonly\");\n    var store = tx.objectStore(\"clickerStore\");\n    var request = store.getAll();\n    request.onsuccess = function(e) {\n      callback(request.result);\n    };\n  } else {\n    console.error('Open database at first');\n    return false;\n  }\n};\n\n// var closeDatabase = function() {\n//   database.close();\n//   database = null;\n// };\n\n},{}],2:[function(require,module,exports){\nvar Donut = function(options) {\n  this.money = options.money || 0;\n  this.clicks = options.clicks || 0;\n}\n\nmodule.exports = Donut;\n\n},{}],3:[function(require,module,exports){\nrequire('./donut');\nconst Upgrade = require('./upgrade');\nconst Database = require('./database');\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker.register('Service-Worker.js').then(function(registration) {\n      // Registration was successful\n      console.log('ServiceWorker registration successful with scope:', registration.scope);\n    }, function(err) {\n      // registration failed :(\n      console.log('ServiceWorker registration failed: ', err);\n    });\n  });\n}\n\nconst clickerModule = (function() {\n\n  // DOM\n  var $donut = document.querySelector('#donut'),\n    $clicks = document.querySelector('#clicks'),\n    $money = document.querySelector('#money');\n\n  // Variables\n  var money = 0,\n    clicks = 0,\n    moneyOnClick = 1,\n    moneyPerTime = 1,\n    moneyEveryTime = 300 * 1000,\n    database;\n\n  // Methods\n  var countClick = function() {\n    clicks++;\n    $clicks.innerHTML = clicks;\n    Database.save('clicks', clicks);\n  };\n\n  var clickMoney = function() {\n    updateMoney(money + moneyOnClick);\n\n  };\n\n  var timeMoney = function() {\n    updateMoney(money + moneyPerTime);\n    setTimeout(timeMoney, moneyEveryTime);\n  };\n\n  var updateMoney = function(value) {\n    money = value;\n    $money.innerHTML = value;\n    Database.save('money', value);\n  };\n\n  // Creating Objects\n  var clickUpgrade = new Upgrade({\n    requiredMoney: 20,\n    obtainedMoney: 1,\n    moneyMultiplier: 3,\n    upgradeMultiplier: 2,\n    btnElement: document.querySelector('#clickUpgrade'),\n    donutElement: document.querySelectorAll('.donut__topping')\n  });\n\n  var moneyEveryTimeUpgrade = new Upgrade({\n    requiredMoney: 100,\n    obtainedMoney: 300,\n    moneyMultiplier: 2,\n    upgradeMultiplier: 0.98,\n    btnElement: document.querySelector('#timeUpgrade'),\n    statElement: document.querySelector('#moneyEveryTime'),\n    donutElement: document.querySelectorAll('.donut__frostig')\n  });\n\n  var moneyPerTimeUpgrade = new Upgrade({\n    requiredMoney: 50,\n    obtainedMoney: 1,\n    moneyMultiplier: 2.25,\n    upgradeMultiplier: 2,\n    btnElement: document.querySelector('#moneyTimeUpgrade'),\n    statElement: document.querySelector('#moneyPerTime'),\n    donutElement: document.querySelectorAll('.donut__cake')\n  });\n\n  // Event Handlers\n  var handleEvents = function() {\n    $donut.addEventListener('click', function() {\n      countClick();\n      clickMoney();\n    });\n\n    $donut.addEventListener('mousedown', function(e) {\n      e.preventDefault();\n    }, false);\n\n    clickUpgrade.btn.addEventListener('click', function() {\n      let results = clickUpgrade.boost(money);\n\n      if (results) {\n        updateMoney(results.newMoney);\n        moneyOnClick = results.newUpgrade;\n        Database.save('moneyOnClick', {\n          color: clickUpgrade.eC,\n          level: clickUpgrade.level\n        });\n      }\n    });\n\n    moneyEveryTimeUpgrade.btn.addEventListener('click', function() {\n      let results = moneyEveryTimeUpgrade.boost(money);\n      if (results) {\n        moneyEveryTime = results.newUpgrade * 1000;\n        window.clearTimeout(timeMoney);\n        setTimeout(timeMoney, moneyEveryTime);\n        updateMoney(results.newMoney);\n        Database.save('moneyEveryTime', {\n          color: moneyEveryTimeUpgrade.eC,\n          level: moneyEveryTimeUpgrade.level\n        });\n      }\n    });\n\n    moneyPerTimeUpgrade.btn.addEventListener('click', function() {\n      let results = moneyPerTimeUpgrade.boost(money);\n      if (results) {\n        updateMoney(results.newMoney);\n        moneyPerTime = results.newUpgrade;\n        Database.save('moneyPerTime', {\n          color: moneyPerTimeUpgrade.eC,\n          level: moneyPerTimeUpgrade.level\n        });\n      }\n    });\n  };\n\n  // Sets stats\n  var setStats = function(stats) {\n    for (let stat of stats) {\n      if (typeof stat.value !== 'object' && stat.value.constructor !== Object) {\n        eval(`${stat.key} = ${stat.value}`);\n      } else {\n        switch (stat.key) {\n          case 'moneyPerTime':\n            moneyPerTime = moneyPerTimeUpgrade.load(stat.value);\n            break;\n          case 'moneyEveryTime':\n            moneyEveryTime = moneyEveryTimeUpgrade.load(stat.value) * 1000;\n            break;\n          case 'moneyOnClick':\n            moneyOnClick = clickUpgrade.load(stat.value);\n            break;\n\n        }\n      }\n    }\n    document.querySelector('#moneyEveryTime').innerHTML = moneyEveryTime / 1000;\n    document.querySelector('#moneyPerTime').innerHTML = moneyPerTime;\n    $clicks.innerHTML = clicks;\n    $money.innerHTML = money;\n\n  };\n\n  // Sets intervals up\n  var setIntervals = function() {\n    setTimeout(timeMoney, moneyEveryTime);\n    setInterval(function() {\n      clickUpgrade.checkUpgradeAvailable(money);\n    }, 200);\n    setInterval(function() {\n      moneyEveryTimeUpgrade.checkUpgradeAvailable(money);\n    }, 200);\n    setInterval(function() {\n      moneyPerTimeUpgrade.checkUpgradeAvailable(money);\n    }, 200);\n  };\n\n  // Init\n  var init = function() {\n    handleEvents();\n    Database.open(function() {\n      Database.load(setStats);\n      setIntervals();\n    });\n  }();\n})();\n\n},{\"./database\":1,\"./donut\":2,\"./upgrade\":5}],4:[function(require,module,exports){\nvar getRandomColor = () => {\n  let letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nmodule.exports = getRandomColor;\n\n},{}],5:[function(require,module,exports){\nconst getRandomColor = require('./randomColor');\n\n// CONSTRUCTOR\nvar Upgrade = function(options) {\n  this.level = 1;\n  this.btn = options.btnElement;\n  this.rM = options.requiredMoney;\n  this.mM = options.moneyMultiplier;\n  this.oM = options.obtainedMoney;\n  this.uM = options.upgradeMultiplier;\n  this.dE = options.donutElement;\n  this.eC = options.color || getRandomColor();\n  if (options.hasOwnProperty('statElement')) {\n    this.sE = options.statElement;\n  }\n};\n\n// METHODS\nUpgrade.prototype.boost = function(money) {\n  \n  if (money < this.rM) {\n    console.log(this.oM * this.uM);\n    return false;\n  } else {\n    this.level++;\n    this.btn.previousElementSibling.children[1].innerHTML = this.level;\n    this.checkUpgradeAvailable();\n    let newMoney = parseInt(money - this.rM);\n    this.rM = this.rM * this.mM;\n    this.oM = parseInt(this.oM * this.uM);\n    if (this.hasOwnProperty('sE')) {\n      this.sE.innerHTML = this.oM;\n    }\n    this.setColor(getRandomColor());\n    return {\n      newMoney,\n      newUpgrade: this.oM\n    };\n  }\n};\n\nUpgrade.prototype.setColor = function(color) {\n  this.eC = color;\n  this.dE.forEach((item) => {\n    item.style.fill = this.eC;\n  });\n};\n\nUpgrade.prototype.checkUpgradeAvailable = function(money) {\n  if (this.rM <= money) {\n    this.btn.parentElement.classList.remove('disabled');\n  } else {\n    this.btn.parentElement.classList.add('disabled');\n  }\n};\n\nUpgrade.prototype.load = function({\n  level,\n  color\n}) {\n  if (level) {\n    while (this.level != level) {\n      this.boost(9999999999999);\n    }\n    if (color) {\n      this.setColor(color);\n    }\n    return parseInt(this.oM);\n  }\n\n};\n\nmodule.exports = Upgrade;\n\n},{\"./randomColor\":4}]},{},[3])"]}